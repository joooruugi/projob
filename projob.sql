DROP TABLE "ADMIN";
DROP TABLE "RESUME";
DROP TABLE "CALENDAR";
DROP TABLE "MESSAGE";
DROP TABLE "MESSAGEROOM";
DROP TABLE "MESSAGEROOM_MEMBER";
DROP TABLE "MESSAGE_READMEMBER";
DROP TABLE "SHARE";
DROP TABLE "SHARE_SHAREFILE";
DROP TABLE "SHAREFILE";
DROP TABLE "PROJECT";
DROP TABLE "CAREER";
DROP TABLE "CERTIFICATE";
DROP TABLE "AFC";
DROP TABLE "PROUSER";
DROP TABLE "P_MEMBER";


CREATE TABLE "ADMIN" (
	"AD_ID"	VARCHAR2(20)		NOT NULL,
	"AD_PASSWORD"	VARCHAR2(20)		NOT NULL,
	"AD_NAME"	VARCHAR2(5)		NOT NULL
);



CREATE TABLE "RESUME" (
	"RE_NO"	NUMBER		NOT NULL,
	"US_ID"	VARCHAR2(20)		NOT NULL,
	"RE_SCHOOL"	VARCHAR2(20)		NOT NULL,
	"RE_GRADUATE"	VARCHAR2(10)		NOT NULL,
	"RE_TYPE"	NUMBER		NOT NULL,
	"RE_HOMEPAGE"	VARCHAR2(1000)		NULL,
	"RE_WDATE"	TIMESTAMP		NOT NULL,
	"RE_OPENYN"	NUMBER	DEFAULT 0	NULL,
	"RE_PICTURE"	VARCHAR2(1000)		NOT NULL
);

CREATE TABLE "CALENDAR" (
	"CAL_NO"	NUMBER		NOT NULL,
	"PRO_NO"	NUMBER		NOT NULL,
	"CAL_ID"	VARCHAR2(20)		NOT NULL,
	"CAL_MEMBER_ID"	VARCHAR2(300)		NULL,
	"CAL_TITLE"	VARCHAR2(300)		NOT NULL,
	"CAL_CONTENT"	VARCHAR2(1000)		NULL,
	"CAL_START"	TIMESTAMP	DEFAULT SYSTIMESTAMP	NULL,
	"CAL_END"	TIMESTAMP		NULL,
	"CAL_ALLDAY_YN"	VARCHAR2(1)	DEFAULT 'N'	NOT NULL,
	"CAL_ALLDAY_START"	TIMESTAMP	DEFAULT SYSTIMESTAMP	NULL,
	"CAL_ALLDAY_END"	TIMESTAMP		NULL,
	"CAL_BACKGROUNDCOLOR"	VARCHAR2(100)		NULL,
	"CAL_BORDERCOLOR"	VARCHAR2(100)		NULL,
	"CAL_TEXTCOLOR"	VARCHAR2(100)		NULL
);



CREATE TABLE "MESSAGEROOM" (
	"MR_NO"	NUMBER		NOT NULL,
	"MR_NAME"	VARCHAR2(100)		NOT NULL,
	"MR_WDATE"	TIMESTAMP		NULL,
	"MR_USEYN"	VARCHAR2(1)	DEFAULT 'N'	NULL,
	"MR_DDATE"	TIMESTAMP		NULL
);




CREATE TABLE "MESSAGE" (
	"MSG_NO"	NUMBER		NOT NULL,
	"MR_NO"	NUMBER		NOT NULL,
	"MSG_ID"	VARCHAR2(20)		NOT NULL,
	"MST_CONTENT"	VARCHAR2(3000)		NULL,
	"MSG_SDATE"	TIMESTAMP		NULL,
	"MSG_USEYN"	VARCHAR2(1)	DEFAULT 'N'	NULL,
	"MSG_DDATE"	TIMESTAMP		NULL
);



CREATE TABLE "MESSAGEROOM_MEMBER" (
	"MR_NO"	NUMBER		NOT NULL,
	"US_ID"	VARCHAR2(20)		NOT NULL
);



CREATE TABLE "MESSAGE_READMEMBER" (
	"MSG_NO"	NUMBER		NOT NULL,
	"MSGM_ID"	VARCHAR2(20)		NOT NULL
);




CREATE TABLE "SHARE" (
	"SH_NO"	NUMBER		NOT NULL,
	"PRO_NO"	NUMBER		NOT NULL,
	"SH_ID"	VARCHAR2(20)		NOT NULL,
	"SH_TITLE"	VARCHAR2(150)		NOT NULL,
	"SH_CONTENT"	VARCHAR2(3000)		NULL,
	"SH_WDATE"	TIMESTAMP		NULL,
	"SH_USEYN"	VARCHAR2(1)	DEFAULT 'N'	NULL,
	"SH_DDATE"	TIMESTAMP		NULL
);




CREATE TABLE "SHARE_SHAREFILE" (
	"SH_NO"	NUMBER		NOT NULL,
	"SHF_NO"	NUMBER		NOT NULL
);



CREATE TABLE "SHAREFILE" (
	"SHF_NO"	NUMBER		NOT NULL,
	"SHF_REALNAME"	VARCHAR2(300)		NOT NULL,
	"SHF_NEWNAME"	VARCHAR2(300)		NOT NULL,
	"SHF_EXTENSION"	VARCHAR2(30)		NOT NULL,
	"SHF_PATH"	VARCHAR2(1000)		NOT NULL
);



CREATE TABLE "PROJECT" (
	"PRO_NO"	NUMBER		NOT NULL,
	"PRO_TITLE"	VARCHAR2(30)		NULL,
	"PRO_CONTENT"	VARCHAR2(1500)		NULL,
	"PRO_PERIOD"	NUMBER		NULL,
	"PRO_BUDGET"	NUMBER		NULL,
	"PRO_PERSONNEL"	NUMBER		NULL,
	"PRO_FIELD"	NUMBER		NULL,
	"PRO_OK"	NUMBER	DEFAULT 0	NOT NULL
);



CREATE TABLE "CAREER" (
	"CA_NO"	NUMBER	DEFAULT 0	NOT NULL,
	"RE_NO"	NUMBER		NOT NULL,
	"CA_TITLE"	VARCHAR2(100)		NULL,
	"CA_PERIOD"	TIMESTAMP		NULL,
	"CA_DEPT"	VARCHAR2(50)		NULL,
	"CA_JOBTITLE"	VARCHAR2(50)		NULL
);




CREATE TABLE "CERTIFICATE" (
	"CE_NO"	NUMBER		NOT NULL,
	"RE_NO"	NUMBER	DEFAULT 0	NOT NULL,
	"CE_TITLE"	VARCHAR2(100)		NULL,
	"CE_NUM"	VARCHAR2(50)		NULL,
	"CE_CERT_PUB"	VARCHAR2(100)		NULL,
	"CE_DATE"	TIMESTAMP		NULL
);




CREATE TABLE "PROUSER" (
	"US_ID"	VARCHAR2(20)		NOT NULL,
	"US_PW"	VARCHAR2(20)		NOT NULL,
	"US_NAME"	VARCHAR2(20)		NOT NULL,
	"US_PHONE"	VARCHAR2(20)		NOT NULL,
	"US_EMAIL"	VARCHAR2(100)		NOT NULL,
	"US_ADDRESS"	VARCHAR2(300)		NOT NULL,
	"US_CRN"	NUMBER		NOT NULL,
	"US_INFO"	NUMBER		NOT NULL,
	"US_OK"	NUMBER	DEFAULT 0	NOT NULL
);




CREATE TABLE "AFC" (
	"US_ID"	VARCHAR2(20)		NOT NULL,
	"AFC_NAME"	VARCHAR2(20)		NULL,
	"AFC_PHONE"	VARCHAR2(20)		NULL,
	"AFC_EMAIL"	VARCHAR2(100)		NULL
);



CREATE TABLE "P_MEMBER" (
	"PRO_NO"	NUMBER		NOT NULL,
	"US_ID"	VARCHAR2(300)		NOT NULL,
	"PROM_OK"	NUMBER	DEFAULT 0	NOT NULL
);


ALTER TABLE "ADMIN" ADD CONSTRAINT "PK_ADMIN" PRIMARY KEY (
	"AD_ID"
);

ALTER TABLE "RESUME" ADD CONSTRAINT "PK_RESUME" PRIMARY KEY (
	"RE_NO"
);

ALTER TABLE "CALENDAR" ADD CONSTRAINT "PK_CALENDAR" PRIMARY KEY (
	"CAL_NO"
);

ALTER TABLE "MESSAGEROOM" ADD CONSTRAINT "PK_MESSAGEROOM" PRIMARY KEY (
	"MR_NO"
);

ALTER TABLE "MESSAGE" ADD CONSTRAINT "PK_MESSAGE" PRIMARY KEY (
	"MSG_NO"
);

ALTER TABLE "SHARE" ADD CONSTRAINT "PK_SHARE" PRIMARY KEY (
	"SH_NO"
);

ALTER TABLE "SHAREFILE" ADD CONSTRAINT "PK_SHAREFILE" PRIMARY KEY (
	"SHF_NO"
);

ALTER TABLE "PROJECT" ADD CONSTRAINT "PK_PROJECT" PRIMARY KEY (
	"PRO_NO"
);

ALTER TABLE "CAREER" ADD CONSTRAINT "PK_CAREER" PRIMARY KEY (
	"CA_NO"
);

ALTER TABLE "CERTIFICATE" ADD CONSTRAINT "PK_CERTIFICATE" PRIMARY KEY (
	"CE_NO"
);

ALTER TABLE "PROUSER" ADD CONSTRAINT "PK_PROUSER" PRIMARY KEY (
	"US_ID"
);

ALTER TABLE "RESUME" ADD CONSTRAINT "FK_PROUSER_TO_RESUME_1" FOREIGN KEY (
	"US_ID"
)
REFERENCES "PROUSER" (
	"US_ID"
);

ALTER TABLE "CALENDAR" ADD CONSTRAINT "FK_PROJECT_TO_CALENDAR_1" FOREIGN KEY (
	"PRO_NO"
)
REFERENCES "PROJECT" (
	"PRO_NO"
);

ALTER TABLE "MESSAGE" ADD CONSTRAINT "FK_MESSAGEROOM_TO_MESSAGE_1" FOREIGN KEY (
	"MR_NO"
)
REFERENCES "MESSAGEROOM" (
	"MR_NO"
);

ALTER TABLE "MESSAGEROOM_MEMBER" ADD CONSTRAINT "FK_ROOM_TO_ROOM_MEMBER_1" FOREIGN KEY (
	"MR_NO"
)
REFERENCES "MESSAGEROOM" (
	"MR_NO"
);

ALTER TABLE "MESSAGEROOM_MEMBER" ADD CONSTRAINT "FK_PROUSER_TO_ROOM_MEMBER_1" FOREIGN KEY (
	"US_ID"
)
REFERENCES "PROUSER" (
	"US_ID"
);

ALTER TABLE "MESSAGE_READMEMBER" ADD CONSTRAINT "FK_MES_TO_MES_READMEMBER_1" FOREIGN KEY (
	"MSG_NO"
)
REFERENCES "MESSAGE" (
	"MSG_NO"
);

ALTER TABLE "SHARE" ADD CONSTRAINT "FK_PROJECT_TO_SHARE_1" FOREIGN KEY (
	"PRO_NO"
)
REFERENCES "PROJECT" (
	"PRO_NO"
);

ALTER TABLE "SHARE_SHAREFILE" ADD CONSTRAINT "FK_SHARE_TO_SHARE_SHAREFILE_1" FOREIGN KEY (
	"SH_NO"
)
REFERENCES "SHARE" (
	"SH_NO"
);

ALTER TABLE "SHARE_SHAREFILE" ADD CONSTRAINT "FK_FILE_TO_SHARE_SHAREFILE_1" FOREIGN KEY (
	"SHF_NO"
)
REFERENCES "SHAREFILE" (
	"SHF_NO"
);

ALTER TABLE "CAREER" ADD CONSTRAINT "FK_RESUME_TO_CAREER_1" FOREIGN KEY (
	"RE_NO"
)
REFERENCES "RESUME" (
	"RE_NO"
);

ALTER TABLE "CERTIFICATE" ADD CONSTRAINT "FK_RESUME_TO_CERTIFICATE_1" FOREIGN KEY (
	"RE_NO"
)
REFERENCES "RESUME" (
	"RE_NO"
);

ALTER TABLE "AFC" ADD CONSTRAINT "FK_PROUSER_TO_AFC_1" FOREIGN KEY (
	"US_ID"
)
REFERENCES "PROUSER" (
	"US_ID"
);

ALTER TABLE "P_MEMBER" ADD CONSTRAINT "FK_PROJECT_TO_P_MEMBER_1" FOREIGN KEY (
	"PRO_NO"
)
REFERENCES "PROJECT" (
	"PRO_NO"
);

ALTER TABLE "P_MEMBER" ADD CONSTRAINT "FK_PROUSER_TO_P_MEMBER_1" FOREIGN KEY (
	"US_ID"
)
REFERENCES "PROUSER" (
	"US_ID"
);

-- view 생성 (07/22 권소정)
create or replace view view_p_member_color
as 
select * from p_member left outer join color_sample using(color_no)
;

COMMIT;



-- 동일 프로젝트 내에서 팀원끼리 겹치지 않는 색깔 지정해주는 프로시져 생성(07/22 권소정)

create or replace PROCEDURE color_input_query (
    q_us_id         IN p_member.us_id%TYPE
    ,q_pro_no        IN p_member.pro_no%TYPE
    ,q_color_no      OUT color_sample.color_no%TYPE
    ,q_color_code      OUT color_sample.color_code%TYPE
)
IS
    isfind      number;
BEGIN
    DBMS_OUTPUT.PUT_LINE('q_us_id        : ' || q_us_id);
    DBMS_OUTPUT.PUT_LINE('q_pro_no       : ' || q_pro_no);
    if(q_pro_no > 0)
        then
            select color_no into q_color_no    from view_p_member_color     where us_id=q_us_id and pro_no=q_pro_no;
    END IF;
    if (q_color_no > 0)
        then 
            select color_code into q_color_code    from view_p_member_color     where us_id=q_us_id and pro_no=q_pro_no;
    else
        FOR j IN (select color_no, color_code from color_sample) LOOP
            DBMS_OUTPUT.PUT_LINE('j c no '|| j.color_no);
            isfind := 0;
            select count(*) into isfind from dual where j.color_no in (select color_no from p_member where  pro_no = q_pro_no and prom_ok=1);
    --        FOR k IN (select color_no from p_member where  pro_no = q_pro_no and prom_ok=1) LOOP
    --            IF (j.color_no = k.color_no)
    --                THEN isfind := 1; EXIT;
    --            END IF;
    --        END LOOP;
            DBMS_OUTPUT.PUT_LINE('isfind '|| isfind);
            IF (isfind = 0)
                THEN 
                    isfind := 2;
                    q_color_no := j.color_no;  
                    q_color_code := j.color_code; 
                    DBMS_OUTPUT.PUT_LINE('find q_color_no '|| q_color_no);
                    DBMS_OUTPUT.PUT_LINE('find q_color_code '|| q_color_code);
                    update p_member set color_no = q_color_no where us_id=q_us_id and pro_no=q_pro_no;
                    commit;
                    EXIT;
            END IF;
        END LOOP;
        IF (isfind != 2)
            THEN 
                DBMS_OUTPUT.PUT_LINE('모두 사용중');
                -- 한 프로젝트 당 최대인원 15명 (color_sample 수 15개)
        END IF;
    end if;
END;