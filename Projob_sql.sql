DROP TABLE "ADMIN";
DROP TABLE "RESUME";
DROP TABLE "CALENDAR";
DROP TABLE "MESSAGEROOM";
DROP TABLE "MESSAGE";
DROP TABLE "MESSAGEROOM_MEMBER";
DROP TABLE "SHARE";
DROP TABLE "SHARE_SHAREFILE";
DROP TABLE "SHAREFILE";
DROP TABLE "PROJECT";
DROP TABLE "CAREER";
DROP TABLE "CERTIFICATE";
DROP TABLE "PROUSER";
DROP TABLE "P_MEMBER";
DROP TABLE "COLOR_SAMPLE";
DROP TABLE "PROJECTIMG";
DROP TABLE "RE_IMG";


CREATE TABLE "ADMIN" (
	"AD_ID"	VARCHAR2(20)		NOT NULL,
	"AD_PASSWORD"	VARCHAR2(20)		NOT NULL,
	"AD_NAME"	VARCHAR2(5)		NOT NULL
);

CREATE TABLE "RESUME" (
	"RE_NO"	NUMBER		NOT NULL,
	"US_ID"	VARCHAR2(20)		NOT NULL,
	"RE_SCHOOL"	VARCHAR2(20)		NOT NULL,
	"RE_GRADUATE"	VARCHAR2(10)		NOT NULL,
	"RE_TYPE"	NUMBER		NOT NULL,
	"RE_HOMEPAGE"	VARCHAR2(1000)		NULL,
	"RE_WDATE"	TIMESTAMP		NOT NULL,
	"RE_OPENYN"	NUMBER	DEFAULT 0	NOT NULL,
	"RE_NAME"	VARCHAR2(20)		NOT NULL,
	"RE_BIRTH"	VARCHAR2(30)		NOT NULL,
	"RE_SUBMIT"	NUMBER		NULL,
	"RE_TITLE"	VARCHAR2(200)		NOT NULL
);

COMMENT ON COLUMN "RESUME"."RE_TYPE" IS '분야';
COMMENT ON COLUMN "RESUME"."RE_OPENYN" IS '공개여부';


CREATE TABLE "CALENDAR" (
	"ID"	NUMBER		NOT NULL,
	"PRO_NO"	NUMBER		NOT NULL,
	"TITLE"	VARCHAR2(300)		NOT NULL,
	"WRITER"	VARCHAR2(50)		NOT NULL,
	"START1"	VARCHAR2(50)		NOT NULL,
	"END1"	VARCHAR2(50)		NOT NULL,
	"ALLDAY"	VARCHAR2(5)		NOT NULL,
	"TEXTCOLOR"	VARCHAR2(50)		NOT NULL,
	"BACKGROUNDCOLOR"	VARCHAR2(50)		NULL,
	"BORDERCOLOR"	VARCHAR2(50)		NULL
);

COMMENT ON COLUMN "CALENDAR"."WRITER" IS 'US_ID';


CREATE TABLE "MESSAGEROOM" (
	"MR_NO"	NUMBER		NOT NULL,
	"MR_NAME"	VARCHAR2(100)		NOT NULL,
	"MR_WDATE"	TIMESTAMP		NULL,
	"MR_USEYN"	VARCHAR2(1)	DEFAULT 'N'	NULL,
	"MR_DDATE"	TIMESTAMP		NULL
);

COMMENT ON COLUMN "MESSAGEROOM"."MR_WDATE" IS 'SYSTIMESTAMP';

COMMENT ON COLUMN "MESSAGEROOM"."MR_USEYN" IS 'Y/N';

COMMENT ON COLUMN "MESSAGEROOM"."MR_DDATE" IS 'SYSTIMESTAMP';

CREATE TABLE "MESSAGEROOM_MEMBER" (
	"MR_NO"	NUMBER		NOT NULL,
	"US_ID"	VARCHAR2(20)		NOT NULL
);

CREATE TABLE "MESSAGE" (
	"MSG_NO"	NUMBER		NOT NULL,
	"MR_NO"	    NUMBER		NOT NULL,
	"MSG_ID"	VARCHAR2(20)		NOT NULL,
	"MST_CONTENT"	VARCHAR2(3000)		NULL,
	"MSG_SDATE"	TIMESTAMP		NULL
);

COMMENT ON COLUMN "MESSAGE"."MSG_ID" IS 'F_ID, C_ID';

COMMENT ON COLUMN "MESSAGE"."MSG_SDATE" IS 'SYSTIMESTAMP';





CREATE TABLE "SHARE" (
	"SH_NO"	NUMBER		NOT NULL,
	"PRO_NO"	NUMBER		NOT NULL,
	"SH_ID"	VARCHAR2(20)		NOT NULL,
	"SH_TITLE"	VARCHAR2(150)		NOT NULL,
	"SH_CONTENT"	VARCHAR2(3000)		NULL,
	"SH_WDATE"	TIMESTAMP		NULL,
	"SH_USEYN"	VARCHAR2(1)	DEFAULT 'N'	NULL,
	"SH_DDATE"	TIMESTAMP		NULL
);

COMMENT ON COLUMN "SHARE"."SH_ID" IS 'F_ID, C_ID';

COMMENT ON COLUMN "SHARE"."SH_TITLE" IS '한글(50자 이내)';

COMMENT ON COLUMN "SHARE"."SH_CONTENT" IS '한글(100자 이내)';

COMMENT ON COLUMN "SHARE"."SH_WDATE" IS 'SYSTIMESTAMP';

COMMENT ON COLUMN "SHARE"."SH_USEYN" IS 'Y/N';

COMMENT ON COLUMN "SHARE"."SH_DDATE" IS 'SYSTIMESTAMP';



CREATE TABLE "SHARE_SHAREFILE" (
	"SH_NO"	NUMBER		NOT NULL,
	"SHF_NO"	NUMBER		NOT NULL
);



CREATE TABLE "SHAREFILE" (
	"SHF_NO"	NUMBER		NOT NULL,
	"SHF_REALNAME"	VARCHAR2(300)		NOT NULL,
	"SHF_NEWNAME"	VARCHAR2(300)		NOT NULL,
	"SHF_PATH"	VARCHAR2(1000)		NOT NULL
);



CREATE TABLE "PROJECT" (
	"PRO_NO"	NUMBER		NOT NULL,
	"PRO_TITLE"	VARCHAR2(30)		NOT NULL,
	"PRO_CONTENT"	VARCHAR2(1500)		NOT NULL,
	"PRO_PERIOD"	NUMBER		NOT NULL,
	"PRO_BUDGET"	NUMBER		NOT NULL,
	"PRO_PERSONNEL"	NUMBER		NOT NULL,
	"PRO_FIELD"	NUMBER		NOT NULL,
	"PRO_OK"	NUMBER	DEFAULT 0	NOT NULL,
	"PRO_COMP"	VARCHAR2(20)		NOT NULL,
	"PRO_ID"	VARCHAR2(20)		NOT NULL
);

COMMENT ON COLUMN "PROJECT"."PRO_OK" IS '0:미승인/1:승인';

COMMENT ON COLUMN "PROJECT"."PRO_ID" IS 'US_ID';



CREATE TABLE "CAREER" (
	"CA_NO"	NUMBER	DEFAULT 0	NOT NULL,
	"CA_TITLE"	VARCHAR2(100)		NULL,
	"CA_PERIOD"	VARCHAR2(30)		NULL,
	"CA_DEPT"	VARCHAR2(50)		NULL,
	"CA_JOBTITLE"	VARCHAR2(50)		NULL,
	"CA_ADDDETAIL"	VARCHAR2(2000)		NULL
);

COMMENT ON COLUMN "CAREER"."CA_NO" IS 'RE_NO';



CREATE TABLE "CERTIFICATE" (
	"CE_NO"	NUMBER		NOT NULL,
	"CE_TITLE"	VARCHAR2(100)		NULL,
	"CE_NUM"	VARCHAR2(50)		NULL,
	"CE_CERT_PUB"	VARCHAR2(100)		NULL,
	"CE_DATE"	VARCHAR2(20)		NULL
);

COMMENT ON COLUMN "CERTIFICATE"."CE_NO" IS 'RE_NO';

COMMENT ON COLUMN "CERTIFICATE"."CE_DATE" IS 'SYSTIMESTAMP';



CREATE TABLE "PROUSER" (
	"US_ID"	VARCHAR2(20)		NOT NULL,
	"US_PW"	VARCHAR2(300)		NOT NULL,
	"US_NAME"	VARCHAR2(20)		NOT NULL,
	"US_PHONE"	VARCHAR2(20)		NOT NULL,
	"US_EMAIL"	VARCHAR2(100)		NOT NULL,
	"US_ADDRESS"	VARCHAR2(300)		NOT NULL,
	"US_ADDRESS2"	VARCHAR2(1000)		NOT NULL,
	"US_ADDRESS3"	VARCHAR2(300)		NULL,
	"US_CRN"	NUMBER		NOT NULL,
	"US_INFO"	NUMBER		NOT NULL,
	"US_OK"	NUMBER	DEFAULT 0	NOT NULL,
	"US_ADNAME"	VARCHAR2(20)		NULL,
	"US_ADPHONE"	VARCHAR2(20)		NULL,
	"US_ADEMAIL"	VARCHAR2(100)		NULL
);

COMMENT ON COLUMN "PROUSER"."US_PW" IS '암호화를 위한 300byte';

COMMENT ON COLUMN "PROUSER"."US_ADDRESS" IS '우편번호';

COMMENT ON COLUMN "PROUSER"."US_ADDRESS2" IS '주소';

COMMENT ON COLUMN "PROUSER"."US_ADDRESS3" IS '상세주소';

COMMENT ON COLUMN "PROUSER"."US_INFO" IS '0:프리랜서/1:사업자';

COMMENT ON COLUMN "PROUSER"."US_OK" IS '0:승인전/1:승인';



CREATE TABLE "P_MEMBER" (
	"PRO_NO"	NUMBER		NOT NULL,
	"US_ID"	VARCHAR2(300)		NOT NULL,
	"COLOR_NO"	NUMBER		NULL,
	"PROM_OK"	NUMBER	DEFAULT 0	NOT NULL,
	"RE_NO"	NUMBER		NULL,
	"RE_TITLE"	VARCHAR2(200)		NULL,
	"US_NAME"	VARCHAR2(20)		NOT NULL
);

COMMENT ON COLUMN "P_MEMBER"."PROM_OK" IS '0:미승인/1:승인';



CREATE TABLE "COLOR_SAMPLE" (
	"COLOR_NO"	NUMBER		NOT NULL,
	"COLOR_NAME"	VARCHAR2(15)		NULL,
	"COLOR_CODE"	VARCHAR2(20)		NOT NULL
);



CREATE TABLE "PROJECTIMG" (
	"PROIMG_NO"	NUMBER		NOT NULL,
	"US_ID"	VARCHAR2(30)		NOT NULL,
	"PRO_NO"	NUMBER		NOT NULL,
	"CHANGENAMEPRO"	VARCHAR2(1000)		NOT NULL
);



CREATE TABLE "RE_IMG" (
	"REIMG_NO"	NUMBER		NOT NULL,
	"US_ID"	VARCHAR2(30)		NOT NULL,
	"RE_NO"	NUMBER		NOT NULL,
	"CHANGENAME"	VARCHAR2(1000)		NOT NULL
);

ALTER TABLE "ADMIN" ADD CONSTRAINT "PK_ADMIN" PRIMARY KEY (
	"AD_ID"
);

ALTER TABLE "RESUME" ADD CONSTRAINT "PK_RESUME" PRIMARY KEY (
	"RE_NO"
);

ALTER TABLE "CALENDAR" ADD CONSTRAINT "PK_CALENDAR" PRIMARY KEY (
	"ID"
);

ALTER TABLE "MESSAGEROOM" ADD CONSTRAINT "PK_MESSAGEROOM" PRIMARY KEY (
	"MR_NO"
);

ALTER TABLE "MESSAGE" ADD CONSTRAINT "PK_MESSAGE" PRIMARY KEY (
	"MSG_NO"
);

ALTER TABLE "SHARE" ADD CONSTRAINT "PK_SHARE" PRIMARY KEY (
	"SH_NO"
);

ALTER TABLE "SHAREFILE" ADD CONSTRAINT "PK_SHAREFILE" PRIMARY KEY (
	"SHF_NO"
);

ALTER TABLE "PROJECT" ADD CONSTRAINT "PK_PROJECT" PRIMARY KEY (
	"PRO_NO"
);

ALTER TABLE "CAREER" ADD CONSTRAINT "PK_CAREER" PRIMARY KEY (
	"CA_NO"
);

ALTER TABLE "CERTIFICATE" ADD CONSTRAINT "PK_CERTIFICATE" PRIMARY KEY (
	"CE_NO"
);

ALTER TABLE "PROUSER" ADD CONSTRAINT "PK_PROUSER" PRIMARY KEY (
	"US_ID"
);

ALTER TABLE "COLOR_SAMPLE" ADD CONSTRAINT "PK_COLOR_SAMPLE" PRIMARY KEY (
	"COLOR_NO"
);

ALTER TABLE "PROJECTIMG" ADD CONSTRAINT "PK_PROJECTIMG" PRIMARY KEY (
	"PROIMG_NO"
);

ALTER TABLE "RE_IMG" ADD CONSTRAINT "PK_RE_IMG" PRIMARY KEY (
	"REIMG_NO"
);

ALTER TABLE "RESUME" ADD CONSTRAINT "FK_PROUSER_TO_RESUME_1" FOREIGN KEY (
	"US_ID"
)
REFERENCES "PROUSER" (
	"US_ID"
);

ALTER TABLE "CALENDAR" ADD CONSTRAINT "FK_PROJECT_TO_CALENDAR_1" FOREIGN KEY (
	"PRO_NO"
)
REFERENCES "PROJECT" (
	"PRO_NO"
);

ALTER TABLE "MESSAGE" ADD CONSTRAINT "FK_MESSAGEROOM_TO_MESSAGE_1" FOREIGN KEY (
	"MR_NO"
)
REFERENCES "MESSAGEROOM" (
	"MR_NO"
);

ALTER TABLE "MESSAGEROOM_MEMBER" ADD CONSTRAINT "FK_ROOM_TO_ROOM_MEMBER_1" FOREIGN KEY (
	"MR_NO"
)
REFERENCES "MESSAGEROOM" (
	"MR_NO"
);

ALTER TABLE "MESSAGEROOM_MEMBER" ADD CONSTRAINT "FK_PROUSER_TO_ROOM_MEMBER_1" FOREIGN KEY (
	"US_ID"
)
REFERENCES "PROUSER" (
	"US_ID"
);

ALTER TABLE "SHARE" ADD CONSTRAINT "FK_PROJECT_TO_SHARE_1" FOREIGN KEY (
	"PRO_NO"
)
REFERENCES "PROJECT" (
	"PRO_NO"
);

ALTER TABLE "SHARE_SHAREFILE" ADD CONSTRAINT "FK_SHARE_TO_SHARE_SHAREFILE_1" FOREIGN KEY (
	"SH_NO"
)
REFERENCES "SHARE" (
	"SH_NO"
);

ALTER TABLE "SHARE_SHAREFILE" ADD CONSTRAINT "FK_FILE_TO_SHARE_SHAREFILE_1" FOREIGN KEY (
	"SHF_NO"
)
REFERENCES "SHAREFILE" (
	"SHF_NO"
);

ALTER TABLE "P_MEMBER" ADD CONSTRAINT "FK_PROJECT_TO_P_MEMBER_1" FOREIGN KEY (
	"PRO_NO"
)
REFERENCES "PROJECT" (
	"PRO_NO"
);

ALTER TABLE "P_MEMBER" ADD CONSTRAINT "FK_PROUSER_TO_P_MEMBER_1" FOREIGN KEY (
	"US_ID"
)
REFERENCES "PROUSER" (
	"US_ID"
);

ALTER TABLE "P_MEMBER" ADD CONSTRAINT "FK_COLOR_SAMPLE_TO_P_MEMBER_1" FOREIGN KEY (
	"COLOR_NO"
)
REFERENCES "COLOR_SAMPLE" (
	"COLOR_NO"
);
CREATE SEQUENCE seq_cal_no
       INCREMENT BY 1
       START WITH 1
       MINVALUE 1
       MAXVALUE 9999
       NOCYCLE
       NOCACHE
       NOORDER;
       
CREATE SEQUENCE proimgseq
    INCREMENT BY 1;
    
CREATE SEQUENCE prono_seq
    INCREMENT BY 1;
    
CREATE SEQUENCE re_imgseq
    INCREMENT BY 1;
    
CREATE SEQUENCE re_seq
    INCREMENT BY 1;  

-- view 생성 (07/22 권소정)
create or replace view view_p_member_color
as 
select * from p_member left outer join color_sample using(color_no)
;

COMMIT;


-- 동일 프로젝트 내에서 팀원끼리 겹치지 않는 색깔 지정해주는 프로시져 생성(07/22 권소정)
create or replace PROCEDURE color_input_query (
    q_us_id         IN p_member.us_id%TYPE
    ,q_pro_no        IN p_member.pro_no%TYPE
    ,q_color_no      OUT color_sample.color_no%TYPE
    ,q_color_code      OUT color_sample.color_code%TYPE
)
IS
    isfind      number;
BEGIN
    DBMS_OUTPUT.PUT_LINE('q_us_id        : ' || q_us_id);
    DBMS_OUTPUT.PUT_LINE('q_pro_no       : ' || q_pro_no);
    if(q_pro_no > 0)
        then
            select color_no into q_color_no    from view_p_member_color     where us_id=q_us_id and pro_no=q_pro_no;
    END IF;
    if (q_color_no > 0)
        then 
            select color_code into q_color_code    from view_p_member_color     where us_id=q_us_id and pro_no=q_pro_no;
    else
        FOR j IN (select color_no, color_code from color_sample) LOOP
            DBMS_OUTPUT.PUT_LINE('j c no '|| j.color_no);
            isfind := 0;
            select count(*) into isfind from dual where j.color_no in (select color_no from p_member where  pro_no = q_pro_no and prom_ok=1);
    --        FOR k IN (select color_no from p_member where  pro_no = q_pro_no and prom_ok=1) LOOP
    --            IF (j.color_no = k.color_no)
    --                THEN isfind := 1; EXIT;
    --            END IF;
    --        END LOOP;
            DBMS_OUTPUT.PUT_LINE('isfind '|| isfind);
            IF (isfind = 0)
                THEN 
                    isfind := 2;
                    q_color_no := j.color_no;  
                    q_color_code := j.color_code; 
                    DBMS_OUTPUT.PUT_LINE('find q_color_no '|| q_color_no);
                    DBMS_OUTPUT.PUT_LINE('find q_color_code '|| q_color_code);
                    update p_member set color_no = q_color_no where us_id=q_us_id and pro_no=q_pro_no;
                    commit;
                    EXIT;
            END IF;
        END LOOP;
        IF (isfind != 2)
            THEN 
                DBMS_OUTPUT.PUT_LINE('모두 사용중');
                -- 한 프로젝트 당 최대인원 15명 (color_sample 수 15개)
        END IF;
    end if;
END;